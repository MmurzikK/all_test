{"name": "Autorizationr", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test.TestRegister object at 0x7ff088586e20>\nifyouwantautorization = None\n\n    @allure.title(\"Autorizationr\")\n    @allure.description(\"Проверка на авторизацию\")\n    def test_autorization(self,ifyouwantautorization = None):\n    \n        self.driver.get(self.base_url)\n        timeout = 30\n    \n        autorization = {\n            'autorization': {\n                'Вход': 'user-panel__login'\n            },\n            'url':f'{self.base_url}/?logout=yes',\n    \n        }\n    \n        if ifyouwantautorization == None:\n            #self.driver.get(autorization['url'])\n    \n            self.close_modal_city()\n            element_present = EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'div.main-slider__slide-wrapper'))\n            WebDriverWait(self.driver, timeout).until(element_present)\n    \n            self.driver.find_element_by_class_name(\n                autorization['autorization'][\"Вход\"]).click()\n            model_window = self.driver.find_element_by_css_selector(\".bem-modal_active\")\n            model_window.find_element_by_name(\"LOGIN\").send_keys('89997777777')\n            model_window.find_element_by_name(\"PASSWORD\").send_keys('111111')\n            model_window.find_element_by_class_name(\"bem-button\").click()\n    \n>           text_for_test  = WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, \"a.user-panel__name\"))).text\n\ntest.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"38b61802-aa70-44b0-9587-6fd0c7ba3864\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x7ff089167130>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "description": "Проверка на авторизацию", "start": 1632397655762, "stop": 1632397679134, "uuid": "1d03d2b6-06b9-4e23-af50-470fef1f6c3a", "historyId": "417f77148c68492c4e1b72b973f151ee", "testCaseId": "3111a301da240244ae0db1a0b01840a3", "fullName": "test.TestRegister#test_autorization", "labels": [{"name": "suite", "value": "test"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "9d2fc9ee43bb"}, {"name": "thread", "value": "13-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test"}]}